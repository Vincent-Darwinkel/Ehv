// <auto-generated />
using System;
using Event_Service.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Event_Service.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210514152231_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Event_Service.Models.EventDateDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EventUuid")
                        .HasColumnType("char(36)");

                    b.HasKey("Uuid");

                    b.HasIndex("EventUuid");

                    b.ToTable("EventDate");
                });

            modelBuilder.Entity("Event_Service.Models.EventDateUserDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EventDateUuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserUuid")
                        .HasColumnType("char(36)");

                    b.HasKey("Uuid");

                    b.HasIndex("EventDateUuid");

                    b.ToTable("EventDateUser");
                });

            modelBuilder.Entity("Event_Service.Models.EventDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorUuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("varchar(125)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Uuid");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("Event_Service.Models.EventStepDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("EventUuid")
                        .HasColumnType("char(36)");

                    b.Property<int>("StepNr")
                        .HasColumnType("int");

                    b.HasKey("Uuid");

                    b.HasIndex("EventUuid");

                    b.ToTable("EventStep");
                });

            modelBuilder.Entity("Event_Service.Models.EventStepUserDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EventStepUuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserUuid")
                        .HasColumnType("char(36)");

                    b.HasKey("Uuid");

                    b.HasIndex("EventStepUuid");

                    b.ToTable("EventStepUser");
                });

            modelBuilder.Entity("Event_Service.Models.EventDateDto", b =>
                {
                    b.HasOne("Event_Service.Models.EventDto", null)
                        .WithMany("EventDates")
                        .HasForeignKey("EventUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Service.Models.EventDateUserDto", b =>
                {
                    b.HasOne("Event_Service.Models.EventDateDto", null)
                        .WithMany("EventDateUsers")
                        .HasForeignKey("EventDateUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Service.Models.EventStepDto", b =>
                {
                    b.HasOne("Event_Service.Models.EventDto", null)
                        .WithMany("EventSteps")
                        .HasForeignKey("EventUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Service.Models.EventStepUserDto", b =>
                {
                    b.HasOne("Event_Service.Models.EventStepDto", null)
                        .WithMany("EventStepUsers")
                        .HasForeignKey("EventStepUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Service.Models.EventDateDto", b =>
                {
                    b.Navigation("EventDateUsers");
                });

            modelBuilder.Entity("Event_Service.Models.EventDto", b =>
                {
                    b.Navigation("EventDates");

                    b.Navigation("EventSteps");
                });

            modelBuilder.Entity("Event_Service.Models.EventStepDto", b =>
                {
                    b.Navigation("EventStepUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
