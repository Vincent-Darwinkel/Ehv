// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using User_Service.Dal;

namespace User_Service.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("User_Service.Models.FavoriteArtistDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Artist")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid?>("UserDtoUuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserUuid")
                        .HasColumnType("char(36)");

                    b.HasKey("Uuid");

                    b.HasIndex("UserDtoUuid");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("User_Service.Models.UserDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("About")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("AccountRole")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Uuid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("User_Service.Models.UserHobbyDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Hobby")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid?>("UserDtoUuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserUuid")
                        .HasColumnType("char(36)");

                    b.HasKey("Uuid");

                    b.HasIndex("UserDtoUuid");

                    b.ToTable("Hobby");
                });

            modelBuilder.Entity("User_Service.Models.FavoriteArtistDto", b =>
                {
                    b.HasOne("User_Service.Models.UserDto", null)
                        .WithMany("FavoriteArtists")
                        .HasForeignKey("UserDtoUuid");
                });

            modelBuilder.Entity("User_Service.Models.UserHobbyDto", b =>
                {
                    b.HasOne("User_Service.Models.UserDto", null)
                        .WithMany("Hobbies")
                        .HasForeignKey("UserDtoUuid");
                });
#pragma warning restore 612, 618
        }
    }
}
