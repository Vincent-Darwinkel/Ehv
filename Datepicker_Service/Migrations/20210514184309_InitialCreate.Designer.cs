// <auto-generated />
using System;
using Datepicker_Service.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datepicker_Service.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210514184309_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Datepicker_Service.Models.DatepickerAvailabilityDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DateUuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserUuid")
                        .HasColumnType("char(36)");

                    b.HasKey("Uuid");

                    b.HasIndex("DateUuid");

                    b.ToTable("DatepickerAvailability");
                });

            modelBuilder.Entity("Datepicker_Service.Models.DatepickerDateDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DatePickerUuid")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Uuid");

                    b.HasIndex("DatePickerUuid");

                    b.ToTable("DatepickerDate");
                });

            modelBuilder.Entity("Datepicker_Service.Models.DatepickerDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorUuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Uuid");

                    b.ToTable("Datepicker");
                });

            modelBuilder.Entity("Datepicker_Service.Models.DatepickerAvailabilityDto", b =>
                {
                    b.HasOne("Datepicker_Service.Models.DatepickerDateDto", null)
                        .WithMany("UserAvailabilities")
                        .HasForeignKey("DateUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Datepicker_Service.Models.DatepickerDateDto", b =>
                {
                    b.HasOne("Datepicker_Service.Models.DatepickerDto", null)
                        .WithMany("Dates")
                        .HasForeignKey("DatePickerUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Datepicker_Service.Models.DatepickerDateDto", b =>
                {
                    b.Navigation("UserAvailabilities");
                });

            modelBuilder.Entity("Datepicker_Service.Models.DatepickerDto", b =>
                {
                    b.Navigation("Dates");
                });
#pragma warning restore 612, 618
        }
    }
}
